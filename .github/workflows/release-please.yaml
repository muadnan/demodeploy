name: Release Workflow

on:
  # push:
  #   branches:
  #     - 'main'
  #     - 'prerelease'
  workflow_dispatch:
permissions: write-all
  
jobs:
  release-job:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release.outputs.tag_name }}
      created: ${{ steps.release.outputs.prs_created }}
      version: ${{ steps.release.outputs.pr }}
      prnu: ${{ steps.releasetwo.outputs.prnumber }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Release with release-please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          target-branch: ${{ github.ref_name }}
      - name: Merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh merge 102 --squash
      - name: Release with release-please
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          target-branch: main
      # - name: echo
      #   id: releasetwo
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     cat package.json
      #     echo "------------"
      #     echo $(jq -r '.version' package.json)
      #     echo "-----------------"
      #     echo echo version=$(grep -oP '"version": *"[^/]*"' package.json) >> $GITHUB_OUTPUT
      #     echo "$version"
      #     echo "${{ steps.release.outputs.tag_name }}"
      #     echo "${{ steps.release.outputs.prs_created }}"
      #     echo "${{ steps.release.outputs.sha }}"
      #     echo "${{ steps.release.outputs.pr.number }}"
      #     echo "${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}"
      #     echo "------------//////"
      #     gh pr list --author "github-actions[bot]" --label "autorelease: pending" --state "open" --json number --jq '.[] | .number'
      #     prnumber="$(gh pr list --author "github-actions[bot]" --label "autorelease: pending" --state "open" --json number --jq '.[] | .number')"
      #     echo "prnumber=$prnumber" >> $GITHUB_OUTPUT
      #     echo prkk="$(gh pr list --author "github-actions[bot]" --label "autorelease: pending" --state "open" --json number --jq '.[] | .number')" >> $GITHUB_OUTPUT
      # - name: Clone repository
      #   uses: actions/checkout@v4
      #   with:
      #     ref: ${{ github.event.pull_request.head.ref }}
      # - name: echo
      #   run: cat package.json
      # - name: PR
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GIT: ${{ github.ref }}
      #     COM:  ${{ github.sha }}
      #   run: |
      #     echo ${PR_URL##*/}
      #     gh pr checkout 38
      #     cat package.json
      #     echo ${PR_URL##*/}
      #     echo $GIT
      #     echo $COM
      # - name: PRINT PR
      #   run: |
      #     echo ${{ steps.releasetwo.outputs.prnumber }}
      #     echo "--------"
      #     echo ${{ steps.releasetwo.outputs.prnumber }}
      #     echo ${{ steps.releasetwo.outputs.version }}

      # - name: PRINTJSON
      #   env:
      #     PRKK: ${{ fromJSON(steps.releasetwo.outputs.prnumber) }}
      #   run: |
      #     echo $PRKK
          
      # - env:
      #     EVENT_CONTEXT: ${{ toJSON(github.event) }}
      #   run: |
      #     echo $EVENT_CONTEXT
      # - name: ch
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh pr checkout 39
      #     cat Chart.yaml
      # - name: Print Chart Version
      #   run: |
      #     CHART_VERSION="$(grep 'version:' Chart.yaml | awk '{print $$1}')"
      #     echo "Version is: ${CHART_VERSION}"
  # piii:
  #   needs: release-job
  #   if: ${{ github.ref_name== 'devlop' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "Adnan"
  # prrr:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run: git pull

  # tag:
  #   runs-on: ubuntu-latest
  #   needs: release-job
  #   steps:
  #     - name: sec
  #       run: |
  #         echo "${{ needs.release-job.outputs.prnu }}"
  #         echo "${{ steps.release.outputs.tag_name }}"
          
#     # steps:
#     #   - name: Checkout
#     #     uses: actions/checkout@v4
#     #   - name: Semantic Release
#     #     uses: cycjimmy/semantic-release-action@v4
#     #     env:
#     #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
